{"version":3,"sources":["../../server/app.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;uBAEO,SAAS;;;;qBACX,SAAS;;;;iCACR,sBAAsB;;;;oBACxB,MAAM;;;;;AAGvB,IAAI,+BAAO,MAAM,EAAE;AAAE,SAAO,CAAC,eAAe,CAAC,CAAC;CAAE;;;AAGhD,IAAI,gBAAgB,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACpD,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,GAAG,GAAG,2BAAS,CAAC;AACpB,GAAG,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAC;AAChC,SAAO,EAAE,IAAI;AACb,KAAG,EAAE;AACH,WAAO,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAC,QAAQ,EAAC,YAAY,CAAC;GAC1D;CACF,CAAC,CAAC,CAAC;AACJ,IAAI,MAAM,GAAG,kBAAK,YAAY,CAAC,GAAG,CAAC,CAAC;AACpC,OAAO,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;;;AAGzB,SAAS,WAAW,GAAG;AACrB,KAAG,CAAC,gBAAgB,GAAG,GAAG,CAAC,EAAE,CAAC,iBAAiB,EAAC,YAAW;AAAE,UAAM,CAAC,MAAM,CAAC,+BAAO,IAAI,EAAE,+BAAO,EAAE,EAAE,YAAW;AAC3G,aAAO,CAAC,GAAG,CAAC,4CAA4C,EAAE,+BAAO,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;KACxF,CAAC,CAAC;GACH,CAAC,CAAC;CACJ;;AAED,mBAAM,SAAS,CAAC,IAAI,EAAE,CACnB,IAAI,CAAC,WAAW,CAAC,SACZ,CAAC,UAAS,GAAG,EAAE;AACnB,SAAO,CAAC,GAAG,CAAC,yCAAyC,EAAE,GAAG,CAAC,CAAC;CAC7D,CAAC,CAAC;;;AAGL,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC","file":"app.js","sourcesContent":["/**\n * Main application file\n */\n\n'use strict';\n\nimport express from 'express';\nimport sqldb from './sqldb';\nimport config from './config/environment';\nimport http from 'http';\n\n// Populate databases with sample data\nif (config.seedDB) { require('./config/seed'); }\n\n// Setup server\nvar ExpressStormpath = require('express-stormpath');\nvar path = require('path');\nvar app = express();\napp.use(ExpressStormpath.init(app,{\n  website: true,\n  web: {\n    spaRoot: path.join(__dirname, '..','client','index.html')\n  }\n}));\nvar server = http.createServer(app);\nrequire('./config/express')(app);\nrequire('./routes')(app);\n\n// Start server\nfunction startServer() {\n  app.angularFullstack = app.on('stormpath.ready',function() { server.listen(config.port, config.ip, function() {\n    \tconsole.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\n  \t});\n  });\n}\n\nsqldb.sequelize.sync()\n  .then(startServer)\n  .catch(function(err) {\n    console.log('Server failed to start due to error: %s', err);\n  });\n\n// Expose app\nexports = module.exports = app;\n"]}