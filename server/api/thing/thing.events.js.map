{"version":3,"sources":["../../../../server/api/thing/thing.events.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;;;sBAEc,QAAQ;;AACnC,IAAI,KAAK,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;AACzC,IAAI,WAAW,GAAG,0BAAkB,CAAC;;;AAGrC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;;;AAG/B,IAAI,MAAM,GAAG;AACX,eAAa,EAAE,MAAM;AACrB,eAAa,EAAE,MAAM;AACrB,gBAAc,EAAE,QAAQ;CACzB,CAAC;;;AAGF,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;AACpB,MAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACtB,OAAK,CAAC,IAAI,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;CACjC;;AAED,SAAS,SAAS,CAAC,KAAK,EAAE;AACxB,SAAO,UAAS,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE;AAClC,eAAW,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7C,eAAW,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AAC7B,QAAI,CAAC,IAAI,CAAC,CAAC;GACZ,CAAA;CACF;;qBAEc,WAAW","file":"thing.events.js","sourcesContent":["/**\n * Thing model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nvar Thing = require('../../sqldb').Thing;\nvar ThingEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nThingEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  'afterCreate': 'save',\n  'afterUpdate': 'save',\n  'afterDestroy': 'remove'\n};\n\n// Register the event emitter to the model events\nfor (var e in events) {\n  var event = events[e];\n  Thing.hook(e, emitEvent(event));\n}\n\nfunction emitEvent(event) {\n  return function(doc, options, done) {\n    ThingEvents.emit(event + ':' + doc._id, doc);\n    ThingEvents.emit(event, doc);\n    done(null);\n  }\n}\n\nexport default ThingEvents;\n"]}